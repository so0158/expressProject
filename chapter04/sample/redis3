const path = require('path');
const dotenv = require('dotenv');
dotenv.config({path: path.resolve(__dirname, "../../.env")});
const margan = require('morgan');
const axios = require('axios');

/* express app generate */
const express = require('express');
const app = express();

/* redis connect */
const redis = require('redis');
const exp = require('constants');
const client = redis.createClient(6379, '127.0.0.1');
client.on('error', (err =>{
    console.log('Redis Error :' + err);
}));

/* 포트 설정 */
app.set('port', process.env.PORT);

/* 공통 미들웨어 */
app.use(morgan('dev'));
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

/* 라우팅 설정 */
app.get('/naver/news', (req, res) => {
    const client_id = 'En7aoB_LJ7Y9qZAay11t'; //'발급받은 client id';
    const client_secret = 'VVe8B0MOiG'; //'발급받은 client secret';
    const api_url = 'https://openapi.naver.com/v1/search/blog?query='
        + encodeURI('푸바오'); //encodeURI(req.query.query);
    const option = {
    };
    const options = {
        url: api_url,
        qs: option,
        headers: {
            'X-Naver-Client-Id': client_id,
            'X- -Client-Secret': client_secret
        },
    };

    request.get(options, (error, response, body) => {
        if (!error && response.statusCode == 200) {
            //console.log(body)
            let newsItem = JSON.parse(body).items;
            //items - title, link, description, pubDate

            const newJson = {
                title: [],
                link: [],
                description: [],
                pubDate: []
            }
            for (let i = 0; i < newsItem.length; i++) {
                newJson.title.push(newsItem[i].title.replace
                    (/(<([^>]+)>)|&quot;/ig, "")
                );
                newJson.link.push(newsItem[i].link);
                newJson.description.push(newsItem[i].description.replace
                    (/(<([^>]+)>)|&quot;/ig, "")
                );
                newJson.pubDate.push(newsItem[i].pubDate);
            }
            res.json(newJson);
        } else {
            res.status(response.statusCode).end();
            console.log('error = ' + response.statusCode);
        }
    });
});
