const path = require('path');
const dotenv = require('dotenv');
dotenv.config({path: path.resolve(__dirname, "../../.env")});
const margan = require('morgan');
const axios = require('axios');

/* express app generate */
const express = require('express');
const app = express();

/* redis connect */
const redis = require('redis');
const exp = require('constants');
const client = redis.createClient(6379, '127.0.0.1');
client.on('error', (err =>{
    console.log('Redis Error :' + err);
}));

/* 포트 설정 */
app.set('port', process.env.PORT);

/* 공통 미들웨어 */
app.use(morgan('dev'));
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

/* 라우팅 설정 */
//http://www.kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchWeeklyBoxOfficeList.xml (또는 .json)
//http://kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchWeeklyBoxOfficeList.json?key=f5eef3421c602c6cb7ea224104795888&targetDt=20120101
app.get('/movie', (req, res) => {
    const key = 'En7aoB_LJ7Y9qZAay11t';
    const api_url = 'http://www.kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json?';
    let params = encodeURI('key') + '=' + key;  
    params += encodeURI('targetDt') +'='+ encodeURI('20230906');  //날짜
    params += encodeURI('itemPerPage') +'='+ encodeURI('9');
    params += encodeURI('multiMovieYn') +'='+ encodeURI('');
    params += encodeURI('repNationCd') +'='+ encodeURI('');
    params += encodeURI('wideAreaCd') +'='+ encodeURI('');
      
    const url = api_url + params;

    const result = await axios.get(url);
    
});
